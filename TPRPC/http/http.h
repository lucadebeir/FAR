/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _HTTP_H_RPCGEN
#define _HTTP_H_RPCGEN

#define RPCGEN_VERSION	199506

#include <rpc/rpc.h>

#define BUFFER_SIZE 1024

struct data1 {
	char request[BUFFER_SIZE];
};
typedef struct data1 data1;
#ifdef __cplusplus
extern "C" bool_t xdr_data1(XDR *, data1*);
#elif __STDC__
extern  bool_t xdr_data1(XDR *, data1*);
#else /* Old Style C */
bool_t xdr_data1();
#endif /* Old Style C */


#ifdef __cplusplus
extern "C" bool_t xdr_data1(XDR *, data1*);
#elif __STDC__
extern  bool_t xdr_data1(XDR *, data1*);
#else /* Old Style C */
bool_t xdr_data1();
#endif /* Old Style C */


struct data2 {
	int fd;
};
typedef struct data2 data2;
#ifdef __cplusplus
extern "C" bool_t xdr_data2(XDR *, data2*);
#elif __STDC__
extern  bool_t xdr_data2(XDR *, data2*);
#else /* Old Style C */
bool_t xdr_data2();
#endif /* Old Style C */


#ifdef __cplusplus
extern "C" bool_t xdr_data2(XDR *, data2*);
#elif __STDC__
extern  bool_t xdr_data2(XDR *, data2*);
#else /* Old Style C */
bool_t xdr_data2();
#endif /* Old Style C */


struct response {
	int fd;
	char char_read[BUFFER_SIZE];
	int byte_read_nbr;
};
typedef struct response response;
#ifdef __cplusplus
extern "C" bool_t xdr_response(XDR *, response*);
#elif __STDC__
extern  bool_t xdr_response(XDR *, response*);
#else /* Old Style C */
bool_t xdr_response();
#endif /* Old Style C */


#ifdef __cplusplus
extern "C" bool_t xdr_response(XDR *, response*);
#elif __STDC__
extern  bool_t xdr_response(XDR *, response*);
#else /* Old Style C */
bool_t xdr_response();
#endif /* Old Style C */


#define HTTP ((rpc_uint)0x20000001)
#define VERSION_UN ((rpc_uint)1)

#ifdef __cplusplus
#define HTTP_NULL ((rpc_uint)0)
extern "C" void * http_null_1(void *, CLIENT *);
extern "C" void * http_null_1_svc(void *, struct svc_req *);
#define HTTP_REQUEST1 ((rpc_uint)1)
extern "C" response * http_request1_1(data1 *, CLIENT *);
extern "C" response * http_request1_1_svc(data1 *, struct svc_req *);
#define HTTP_REQUEST2 ((rpc_uint)2)
extern "C" response * http_request2_1(data2 *, CLIENT *);
extern "C" response * http_request2_1_svc(data2 *, struct svc_req *);

#elif __STDC__
#define HTTP_NULL ((rpc_uint)0)
extern  void * http_null_1(void *, CLIENT *);
extern  void * http_null_1_svc(void *, struct svc_req *);
#define HTTP_REQUEST1 ((rpc_uint)1)
extern  response * http_request1_1(data1 *, CLIENT *);
extern  response * http_request1_1_svc(data1 *, struct svc_req *);
#define HTTP_REQUEST2 ((rpc_uint)2)
extern  response * http_request2_1(data2 *, CLIENT *);
extern  response * http_request2_1_svc(data2 *, struct svc_req *);

#else /* Old Style C */
#define HTTP_NULL ((rpc_uint)0)
extern  void * http_null_1();
extern  void * http_null_1_svc();
#define HTTP_REQUEST1 ((rpc_uint)1)
extern  response * http_request1_1();
extern  response * http_request1_1_svc();
#define HTTP_REQUEST2 ((rpc_uint)2)
extern  response * http_request2_1();
extern  response * http_request2_1_svc();
#endif /* Old Style C */

#endif /* !_HTTP_H_RPCGEN */
